((typeof self !== 'undefined' ? self : this)["webpackJsonpgestionTache"] = (typeof self !== 'undefined' ? self : this)["webpackJsonpgestionTache"] || []).push([[1],{

/***/ "./src/views/App/config/config.js":
/*!****************************************!*\
  !*** ./src/views/App/config/config.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  baseUrl: \"http://gestion-taches-vps.habeuk.online\",\n  ModeDebug: true,\n  post: function post(request) {\n    var _this = this;\n\n    var datas = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new Promise(function (resolv) {\n      var configs = {\n        headers: {}\n      };\n      axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(_this.baseUrl + request, datas, configs).then(function (reponse) {\n        //console.log(\"Config success : \", reponse);\n        resolv({\n          status: true,\n          data: reponse.data,\n          reponse: reponse\n        });\n      }).catch(function (error) {\n        resolv({\n          status: false,\n          error: error.response\n        });\n      });\n    });\n  },\n  get: function get(request) {\n    var _this2 = this;\n\n    var datas = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // console.log(\"ssss\");\n    return new Promise(function (resolv) {\n      var configs = {\n        headers: {}\n      };\n      axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(_this2.baseUrl + request, datas, configs).then(function (reponse) {\n        console.log(\"Config get success : \", reponse);\n        resolv({\n          status: true,\n          data: reponse.data,\n          reponse: reponse\n        });\n      }).catch(function (error) {\n        resolv({\n          status: false,\n          error: error.response\n        });\n      });\n    });\n  }\n});\n\n//# sourceURL=webpack://gestionTache/./src/views/App/config/config.js?");

/***/ }),

/***/ "./src/views/App/project/Utilities.js":
/*!********************************************!*\
  !*** ./src/views/App/project/Utilities.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar Utilities = {\n  /**\n   * Prepare les données pour la sauvagarde.\n   */\n  formatData: function formatData(datas) {\n    return new Promise(function (resolv) {\n      //console.log(\"fdate : \", datas);\n      var result = [];\n\n      if (datas && datas.titre) {\n        var ddp = moment__WEBPACK_IMPORTED_MODULE_0___default()(datas.date_depart_proposer + \" \" + datas.heure_debut, \"YYYY-MM-DD  HH:mm\").unix();\n        var dfp = moment__WEBPACK_IMPORTED_MODULE_0___default()(datas.date_fin_proposer + \" \" + datas.heure_fin, \"YYYY-MM-DD  HH:mm\").unix(); //edition de la table contents\n\n        var table1 = {\n          table: \"gestion_project_contents\",\n          fields: {\n            text: datas.text,\n            titre: datas.titre,\n            type: datas.type\n          },\n          action: \"update\"\n        };\n\n        if (datas.idcontents) {\n          table1.where = [{\n            column: \"idcontents\",\n            value: datas.idcontents\n          }];\n        } //Edition de la table times\n\n\n        if (datas.date_depart_proposer.length && datas.date_fin_proposer.length) {\n          var table2 = {\n            table: \"gestion_project_times\",\n            fields: {\n              status: datas.status,\n              date_depart_proposer: ddp,\n              date_fin_proposer: dfp\n            },\n            action: \"update\",\n            where: [{\n              column: \"idcontents\",\n              value: datas.idcontents\n            }]\n          };\n\n          if (parseInt(datas.status) === 1 && (!datas.date_fin_reel || datas.date_fin_reel === \"\")) {\n            table2.fields.date_fin_reel = moment__WEBPACK_IMPORTED_MODULE_0___default()().unix();\n          }\n\n          result.push(table2);\n        } //mise à jour de la table gestion times\n\n\n        result.push(table1);\n        console.log(\"ligne\", result);\n      }\n\n      resolv(result);\n    });\n  },\n\n  /**\n   * preparation des données pour la mise à jour de la hiérachie\n   */\n  formatHierarchie: function formatHierarchie(datas, nid) {\n    return new Promise(function (resolv) {\n      console.log(\"fdate : \", nid);\n      var result = [];\n\n      if (datas && datas.titre) {\n        //Edition de la table times\n        var table3 = {\n          table: \"gestion_project_hierachie\",\n          fields: {\n            idcontentsparent: nid.id,\n            idcontents: datas.idcontents,\n            ordre: nid.ordre\n          },\n          action: \"update\",\n          where: [{\n            column: \"idcontents\",\n            value: datas.idcontents\n          }]\n        }; //mise à jour de la table gestion times\n\n        result.push(table3);\n        console.log(\"ligne\", result);\n      }\n\n      resolv(result);\n    });\n  },\n\n  /**\n   * un tableau\n   * @param [] cards\n   */\n  formCard: function formCard(cards) {\n    var results = [];\n\n    for (var i in cards) {\n      var card = cards[i];\n\n      if (card.cards) {\n        card.cards = this.formCard(card.cards);\n      }\n\n      results.push(_objectSpread(_objectSpread({}, card), {}, {\n        open: false\n      }));\n    }\n\n    return results;\n  },\n\n  /**\n   * Format les données pour la creation d'un nouveau project, taches, memos, à faire , bugs ...\n   * @param datas Array\n   * @param idc Number, id du contenu encours.\n   */\n  formatAddData: function formatAddData(datas) {\n    var idc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    //console.log(\"formatAddData datas :\", datas, \"\\n idc\", idc);\n    return new Promise(function (resolv) {\n      var childstable = [];\n      var state = parseInt(datas.status, 10);\n      level = parseInt(level, 10);\n\n      if (datas.date_depart_proposer.length && datas.date_fin_proposer) {\n        var ddp = moment__WEBPACK_IMPORTED_MODULE_0___default()(datas.date_depart_proposer + \" \" + datas.heure_debut, \"YYYY-MM-DD  HH:mm\").unix();\n        var dfp = moment__WEBPACK_IMPORTED_MODULE_0___default()(datas.date_fin_proposer + \" \" + datas.heure_fin, \"YYYY-MM-DD  HH:mm\").unix();\n        childstable.push({\n          table: \"gestion_project_times\",\n          fields: {\n            date_depart_proposer: ddp,\n            date_fin_proposer: dfp,\n            status: state\n          }\n        });\n      }\n\n      childstable.push({\n        table: \"gestion_project_hierachie\",\n        fields: {\n          idcontentsparent: idc,\n          ordre: 0,\n          level: level\n        }\n      });\n      var result = [];\n\n      if (datas && datas.titre) {\n        var ligne = {\n          table: \"gestion_project_contents\",\n          fields: {\n            text: datas.text,\n            titre: datas.titre,\n            type: datas.type\n          }\n        };\n        ligne.childstable = {\n          colum_id_name: \"idcontents\",\n          tables: childstable\n        };\n        result.push(ligne);\n      }\n\n      resolv(result);\n    });\n  },\n  // Remplissage des champs pour l’édition d’un contenu du pop-up avec les contenus à éditer\n  fomatVal: function fomatVal(result, postData) {\n    return new Promise(function (resolv) {\n      /*\n      if (result.date_depart_proposer || result.date_fin_proposer) {\n        console.log(\"val.date_depart_proposer \", result);\n      }\n      /**/\n      if (result.idcontents) {\n        postData.idcontents = result.idcontents;\n      }\n\n      for (var i in postData) {\n        if (result[i]) {\n          if (i === \"date_depart_proposer\") {\n            postData[i] = moment__WEBPACK_IMPORTED_MODULE_0___default.a.unix(result[i]).format(\"YYYY-MM-DD\");\n            postData.heure_debut = moment__WEBPACK_IMPORTED_MODULE_0___default.a.unix(result[i]).format(\"HH:mm\");\n          } else if (i === \"date_fin_proposer\") {\n            postData[i] = moment__WEBPACK_IMPORTED_MODULE_0___default.a.unix(result[i]).format(\"YYYY-MM-DD\");\n            postData.heure_fin = moment__WEBPACK_IMPORTED_MODULE_0___default.a.unix(result[i]).format(\"HH:mm\");\n          } else {\n            postData[i] = result[i];\n          }\n        }\n      }\n\n      resolv();\n    });\n  },\n  // format data for deleted action\n  formatDeleteData: function formatDeleteData(datas) {\n    return new Promise(function (resolv) {\n      var result = [];\n\n      if (datas && datas.titre) {\n        var ligne = {\n          table: \"gestion_project_contents\",\n          fields: {}\n        };\n        ligne.action = \"delete\";\n\n        if (datas.idcontents) {\n          ligne.where = [{\n            column: \"idcontents\",\n            value: datas.idcontents\n          }];\n        }\n\n        ligne.childstable = {\n          tables: [{\n            table: \"gestion_project_times\",\n            fields: {},\n            action: \"delete\",\n            where: [{\n              column: \"idcontents\",\n              value: datas.idcontents\n            }]\n          }, {\n            table: \"gestion_project_hierachie\",\n            fields: {},\n            action: \"delete\",\n            where: [{\n              column: \"idcontents\",\n              value: datas.idcontents\n            }]\n          }]\n        };\n        result.push(ligne);\n        console.log(\"ligne\", result);\n      }\n\n      resolv(result);\n    });\n  },\n  //client and societé format\n\n  /**\n   * preparation des données pour l'ajout d'un nouveau client\n   */\n  formatDataClient: function formatDataClient(datas) {\n    return new Promise(function (resolv) {\n      var result = [];\n\n      if (datas && datas.nom) {\n        //edition de la table contents\n        var table1 = {\n          table: \"gestion_project_client\",\n          fields: {\n            nom: datas.nom,\n            uid: datas.uid,\n            prenom: datas.prenom,\n            phone: datas.phone,\n            adresse: datas.adresse,\n            fonction: datas.fonction,\n            idsociete: datas.idsociete\n          },\n          action: \"update\"\n        };\n\n        if (datas.idclient) {\n          table1.where = [{\n            column: \"idclient\",\n            value: datas.idclient\n          }];\n        } //mise à jour de la table gestion times\n\n\n        result.push(table1);\n      }\n\n      resolv(result);\n    });\n  },\n\n  /**\n   * preparation des données pour l'ajout d'une nouvelle société\n   */\n  formatDataSte: function formatDataSte(datas) {\n    return new Promise(function (resolv) {\n      var result = [];\n\n      if (datas && datas.nom) {\n        //edition de la table contents\n        var table1 = {\n          table: \"gestion_project_societe\",\n          fields: {\n            nom: datas.nom,\n            email: datas.email,\n            phone: datas.phone,\n            adresse: datas.adresse,\n            siteweb: datas.siteweb\n          },\n          action: \"update\"\n        };\n\n        if (datas.idsociete) {\n          table1.where = [{\n            column: \"idsociete\",\n            value: datas.idsociete\n          }];\n        } //mise à jour de la table societe\n\n\n        result.push(table1);\n      }\n\n      resolv(result);\n    });\n  },\n  // format data for deleted action of entitie client or societe\n  formatDeleteClient: function formatDeleteClient(datas) {\n    return new Promise(function (resolv) {\n      var result = [];\n\n      if (datas.idclient) {\n        var ligne = {\n          table: \"gestion_project_client\",\n          fields: {},\n          action: \"delete\",\n          where: [{\n            column: \"idclient\",\n            value: datas.idclient\n          }]\n        };\n        result.push(ligne);\n        console.log(\"ligne 1\", result);\n      } else if (datas.idsociete) {\n        ligne = {\n          table: \"gestion_project_client\",\n          fields: {},\n          action: \"delete\",\n          where: [{\n            column: \"idsociete\",\n            value: datas.idsociete\n          }]\n        };\n        var ligne1 = {\n          table: \"gestion_project_societe\",\n          fields: {},\n          action: \"delete\",\n          where: [{\n            column: \"idsociete\",\n            value: datas.idsociete\n          }]\n        };\n        result.push(ligne);\n        result.push(ligne1);\n        console.log(\"ligne2\", result);\n      }\n\n      resolv(result);\n    });\n  },\n  // Format data for create new invoice\n  formatAddInvoice: function formatAddInvoice(datas, update) {\n    return new Promise(function (resolv) {\n      var result = [];\n      var cat = moment__WEBPACK_IMPORTED_MODULE_0___default()().unix();\n      var uat = moment__WEBPACK_IMPORTED_MODULE_0___default()().unix();\n      console.log(\"fadin :\", datas);\n\n      if (datas && datas.numero) {\n        // Edition de la table contents.\n        var table1 = {\n          table: \"gestion_project_invoice\",\n          fields: {\n            numero: datas.numero,\n            idcontents: datas.idcontents !== \"\" ? datas.idcontents : null,\n            idclients: datas.idclients,\n            objet: datas.objet,\n            creaated: cat,\n            proprietaire: datas.proprietaire,\n            updated: uat\n          }\n        };\n\n        if (update == true) {\n          table1.where = [{\n            column: \"numero\",\n            value: datas.numero\n          }];\n          table1.action = \"update\";\n        } //mise à jour de la table societe\n\n\n        result.push(table1);\n      }\n\n      resolv(result);\n    });\n  },\n  // suppression d’une facture\n  formatDeleteInvoice: function formatDeleteInvoice(datas) {\n    return new Promise(function (resolv) {\n      var result = [];\n\n      if (datas && datas.numero) {\n        //edition de la table contents\n        var table1 = {\n          table: \"gestion_project_invoice\",\n          fields: {},\n          action: \"delete\",\n          where: [{\n            column: \"numero\",\n            value: datas.numero\n          }]\n        };\n        var table2 = {\n          table: \"gestion_project_invoice_list\",\n          fields: {},\n          action: \"delete\",\n          where: [{\n            column: \"idinvoice\",\n            value: datas.numero\n          }]\n        }; //mise à jour de la table societe\n\n        result.push(table2);\n        result.push(table1);\n      }\n\n      resolv(result);\n    });\n  },\n  formatAddInvoiceList: function formatAddInvoiceList(datas, update) {\n    return new Promise(function (resolv) {\n      var result = [];\n\n      if (datas && datas.titre) {\n        //edition de la table contents\n        var table1 = {\n          table: \"gestion_project_invoice_list\",\n          fields: {\n            titre: datas.titre,\n            idcontents: datas.idcontents !== \"\" ? datas.idcontents : null,\n            description: datas.description,\n            cout: datas.cout,\n            idinvoice: datas.idinvoice\n          }\n        };\n\n        if (update == true) {\n          table1.where = [{\n            column: \"idinvoicelist\",\n            value: datas.idinvoicelist\n          }];\n          table1.action = \"update\";\n        } //mise à jour de la table societe\n\n\n        result.push(table1);\n      }\n\n      resolv(result);\n    });\n  },\n  formatDeleteInvoiceList: function formatDeleteInvoiceList(datas) {\n    return new Promise(function (resolv) {\n      var result = [];\n      console.log(\"fadin :\", datas);\n\n      if (datas && datas.idinvoicelist) {\n        //edition de la table contents\n        var table1 = {\n          table: \"gestion_project_invoice_list\",\n          fields: {},\n          action: \"delete\",\n          where: [{\n            column: \"idinvoicelist\",\n            value: datas.idinvoicelist\n          }]\n        }; //mise à jour de la table societe\n\n        result.push(table1);\n      }\n\n      resolv(result);\n    });\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Utilities);\n\n//# sourceURL=webpack://gestionTache/./src/views/App/project/Utilities.js?");

/***/ })

}]);